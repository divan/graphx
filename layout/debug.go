package layout

import "github.com/divan/graphx/graph"

// Layout3DWithDebug implements Layout interface with additional debug data methods.
type Layout3DWithDebug struct {
	*Layout3D
	forcesDebugData ForcesDebugData
}

// NewWithDebug initializes layout with nodes data.
func NewWithDebug(g *graph.Graph, forces ...Force) *Layout3DWithDebug {
	l := &Layout3DWithDebug{
		Layout3D:        New(g, forces...),
		forcesDebugData: make(ForcesDebugData),
	}

	return l
}

// UpdatePositions recalculates nodes' positions, applying all the forces.
// It returns average amount of movement generated by this step.
func (l *Layout3DWithDebug) UpdatePositions() float64 {
	l.resetForces()

	for _, force := range l.forces {
		apply := force.Rule()
		apply(force, l.objects, l.links)
	}

	return l.integrate()
}

func (l *Layout3DWithDebug) resetForces() {
	l.Layout3D.resetForces()
	l.forcesDebugData = make(ForcesDebugData)
}

// ForcesDebugData returns debug data with forces.
func (l *Layout3DWithDebug) ForcesDebugData() ForcesDebugData {
	return l.forcesDebugData
}
